TESTS `7-base_geometry``
===========================

Using ``BaseGeometry``
----------------------

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry



    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -8)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 5)


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 1, 5)
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given


    >>> bg = BaseGeometry()
    >>> bg.area(8)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "8")
    Traceback (most recent call last):
              ...
    TypeError: name must be an integer


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
              ...
    TypeError: name must be an integer

    >>> bg = BaseGeometry()
    >>> bg.area(8, 8)
    Traceback (most recent call last):
              ...
    TypeError: area() takes 1 positional argument but 3 were given

	>>> bg.integer_validator()
	Traceback (most recent call last):
	    ...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
